{"version":3,"sources":["components/contactList/renderContactList.js","components/filter/filter.js","components/contactForm/contactForm.js","App.js","index.js"],"names":["RenderContactList","this","props","contacts","filter","searchFilter","name","lowerValue","toLowerCase","includes","length","map","id","number","className","type","onClick","deleteContact","Component","Filter","filterInput","value","pattern","onChange","ContactForm","state","checkContact","find","alert","newContact","newObj","shortid","generate","onSubmit","formInput","target","setState","formSubmit","e","preventDefault","reset","placeholder","title","required","App","dataObj","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.538a6f16.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass RenderContactList extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    filter: PropTypes.string,\n  };\n\n  render() {\n    const { contacts, filter } = this.props;\n    const searchFilter = contacts.filter(({ name }) => {\n      const lowerValue = filter.toLowerCase();\n      return name.toLowerCase().includes(lowerValue);\n    });\n\n    return (\n      <div>\n        <ul>\n          {this.props.contacts.length === 0 ? (\n            <h2>No contacts</h2>\n          ) : (\n            searchFilter.map(({ id, name, number }) => {\n              return (\n                <li key={id}>\n                  {name}: {number}\n                  <button\n                    className=\"item-list\"\n                    id={id}\n                    type=\"button\"\n                    onClick={() => this.props.deleteContact(id)}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default RenderContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  static propTypes = {\n    filterInput: PropTypes.func,\n    Filter: PropTypes.string,\n  };\n\n  render() {\n    const { filterInput, filter } = this.props;\n    return (\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          onChange={filterInput}\n        />\n      </label>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  checkContact = () => {\n    const { contacts } = this.props;\n    contacts.find(({ name }) => {\n      return name === this.state.name;\n    })\n      ? alert(`${this.state.name} is already in contacts.`)\n      : this.newContact();\n  };\n\n  newContact = () => {\n    const { name, number } = this.state;\n    const newObj = { name, number, id: shortid.generate() };\n\n    this.props.onSubmit(newObj);\n  };\n\n  formInput = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  formSubmit = e => {\n    e.preventDefault();\n    this.checkContact();\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.formSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Kris Evans\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.formInput}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"555-55-55\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.formInput}\n          />\n        </label>\n        <button className=\"submit_form\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import './App.css';\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport RenderContactList from './components/contactList/renderContactList';\nimport Filter from './components/filter/filter';\nimport ContactForm from './components/contactForm/contactForm';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  filterInput = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = dataObj => {\n    const { contacts } = this.state;\n    this.setState({ contacts: [dataObj, ...contacts] });\n  };\n\n  deleteContact = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(i => i.id !== id),\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <section>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.onSubmit} contacts={contacts} />\n        <h2>Contacts</h2>\n        <Filter filterInput={this.filterInput} filter={filter} />\n        <RenderContactList\n          contacts={contacts}\n          filter={filter}\n          deleteContact={this.deleteContact}\n        />\n      </section>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}